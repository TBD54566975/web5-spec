{
  "description": "did:dht resolution",
  "vectors": [
    {
      "description": "resolves successfully",
      "input": {
        "didUri": "did:dht:diyiiuks5k1iiep5pjwqfheg47fo9r9iz66agct7qjjxbqw8nxmy"
      },
      "output": {
        "document": {
          "id": "did:dht:diyiiuks5k1iiep5pjwqfheg47fo9r9iz66agct7qjjxbqw8nxmy",
          "authentication": [],
          "assertionMethod": [],
          "capabilityDelegation": [],
          "capabilityInvocation": [],
          "verificationMethod": [
            {
              "id": "did:dht:diyiiuks5k1iiep5pjwqfheg47fo9r9iz66agct7qjjxbqw8nxmy#0",
              "type": "JsonWebKey",
              "controller": "did:dht:diyiiuks5k1iiep5pjwqfheg47fo9r9iz66agct7qjjxbqw8nxmy",
              "publicKeyJwk": {
                "kty": "OKP",
                "crv": "Ed25519",
                "x": "HUFazVbapVqhu2po4vEG10sPk_W_vYMyPXJS8LqHE9Y",
                "kid": "eyQ-YzdtG9pk-9m0cvjLsavFXY1765OOHQxCDxz5Mdo",
                "alg": "EdDSA"
              }
            }
          ]
        }
      },
      "errors": false
    },
    {
      "description": "methodNotSupported error returned when did method is not dht",
      "input": {
        "didUri": "did:web:example.com"
      },
      "output": {
        "didResolutionMetadata": {
          "error": "methodNotSupported"
        }
      },
      "errors": true
    },
    {
      "description": "notFound error returned when not published",
      "input": {
        "didUri": "did:dht:uqaj3fcr9db6jg6o9pjs53iuftyj45r46aubogfaceqjbo6pp9sy"
      },
      "output": {
        "didResolutionMetadata": {
          "error": "notFound"
        }
      },
      "errors": true
    },
    {
      "description": "invalidPublicKey error returned for suffix with invalid character",
      "input": {
        "didUri": "did:dht:cyuoqaf7itop8ohww4yn5ojg13qaq83r9zihgqntc5i9zwrfdfov"
      },
      "output": {
        "didResolutionMetadata": {
          "error": "invalidPublicKey"
        }
      },
      "errors": true
    },
    {
      "description": "invalidDid error returned for invalid did",
      "input": {
        "didUri": "invalid-did"
      },
      "output": {
        "didResolutionMetadata": {
          "error": "invalidDid"
        }
      },
      "errors": true
    }
  ]
}